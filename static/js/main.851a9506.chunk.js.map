{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getFilm","fetch","then","res","json","FindMovie","onAdd","useState","searchError","setSearchError","setTitile","setMovie","searchMovie","a","findMovie","Response","Title","Plot","Poster","imdbID","newMovie","htmlFor","type","id","placeholder","cNames","value","onChange","target","onClick","App","data","some","film","element","ReactDOM","render","document","getElementById"],"mappings":"mxEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,+CCT3BG,EAAU,SAAAd,GAAK,OAAIe,MAFf,8CAEgCf,GAC9CgB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WCKNC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA2BF,mBAAS,IAApC,mBAAOrB,EAAP,KAAcwB,EAAd,KACA,EAA0BH,mBAAS,MAAnC,mBAAOV,EAAP,KAAcc,EAAd,KAEMC,EAAW,uCAAG,sCAAAC,EAAA,sEACMb,EAAQd,GADd,UAGS,UAFrB4B,EADY,QAGJC,SAHI,uBAIhBN,GAAe,GACfC,EAAU,IACVC,EAAS,MANO,0BAYhBK,EAIEF,EAJFE,MACAC,EAGEH,EAHFG,KACAC,EAEEJ,EAFFI,OACAC,EACEL,EADFK,OAGIC,EAAW,CACflC,MAAO8B,EACP7B,YAAa8B,EACb7B,OAAQ8B,EACR7B,QAAQ,8BAAD,OAAgC8B,GACvCA,UAGFR,EAASS,GA1BS,4CAAH,qDA6BjB,OACE,oCACE,0BAAM9B,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ+B,QAAQ,eAAjC,eAIA,yBAAK/B,UAAU,WACb,2BACEgC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZlC,UAAWmC,IAAO,QAAS,CACzB,YAAajB,IAEfkB,MAAOxC,EACPyC,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXlB,EAAUkB,EAAOF,OACjBjB,GAAe,OAKpBD,GACC,uBAAGlB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEgC,KAAK,SACLhC,UAAU,kBACVuC,QAASjB,GAHX,iBASF,yBAAKtB,UAAU,WACb,4BACEgC,KAAK,SACLhC,UAAU,oBACVuC,QAAS,WACPvB,EAAMT,GACNc,EAAS,MACTD,EAAU,MANd,sBAeN,yBAAKpB,UAAU,aACZO,GACC,oCACE,wBAAIP,UAAU,SAAd,WACA,kBAAC,EAAcO,O,OClGdiC,EAAM,WACjB,MAA2BvB,mBAASwB,GAApC,mBAAOpC,EAAP,KAAegB,EAAf,KAiBA,OACE,yBAAKrB,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWgB,MArBM,SAACT,GACjBA,IAISF,EAAOqC,MAAK,SAAAC,GAAI,OAC5BA,EAAKd,SAAWtB,EAAMsB,WAMxBR,GAAS,SAAAuB,GAAO,4BAAQA,GAAR,CAAiBrC,cChBrCsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.851a9506.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=d1a462a4&t=';\n\nexport const getFilm = title => fetch(BASE_URL + title)\n  .then(res => res.json());\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport cNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { getFilm } from '../../api/api';\n\nexport const FindMovie = ({ onAdd }) => {\n  const [searchError, setSearchError] = useState(false);\n  const [title, setTitile] = useState('');\n  const [movie, setMovie] = useState(null);\n\n  const searchMovie = async() => {\n    const findMovie = await getFilm(title);\n\n    if (findMovie.Response !== 'True') {\n      setSearchError(true);\n      setTitile('');\n      setMovie(null);\n\n      return;\n    }\n\n    const {\n      Title,\n      Plot,\n      Poster,\n      imdbID,\n    } = findMovie;\n\n    const newMovie = {\n      title: Title,\n      description: Plot,\n      imgUrl: Poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbID,\n    };\n\n    setMovie(newMovie);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cNames('input', {\n                'is-danger': searchError,\n              })}\n              value={title}\n              onChange={({ target }) => {\n                setTitile(target.value);\n                setSearchError(false);\n              }}\n            />\n          </div>\n\n          {searchError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                onAdd(movie);\n                setMovie(null);\n                setTitile('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovie] = useState(data);\n\n  const addMovieToList = (movie) => {\n    if (!movie) {\n      return;\n    }\n\n    const check = movies.some(film => (\n      film.imdbID === movie.imdbID));\n\n    if (check) {\n      return;\n    }\n\n    setMovie(element => [...element, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovieToList} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}